{"ast":null,"code":"var _jsxFileName = \"/Users/jrc134/Desktop/project-458/project_mern_memories/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; //STOP TIME 42:24 \n//STOP TIME =================\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj; //cannot get property profileObj is undefined if we didnt put ? . optional chain operator. . \n\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log('Google Sign In was unsuccessful. Try again later');\n  };\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    vairant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"615087181653-je0qn9i6hpojq0ikaj6hd3d2qflft2ik.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button //Setting up button for google auth \n    , {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }\n      }),\n      variant: \"contianed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an acocount? Sign In' : \"Don't have an account? Sign up! \"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/jrc134/Desktop/project-458/project_mern_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","LockOutlinedIcon","useStyles","Input","Icon","useHistory","useDispatch","Auth","classes","isSignup","setIsSignup","showPassword","setShowPassword","dispatch","history","handleSubmit","handleChange","switchMode","prevIsSignup","handleShowPassword","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","prevShowPassword","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container, } from '@material-ui/core'\nimport { GoogleLogin } from 'react-google-login'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport useStyles from './styles';\nimport Input from './Input'\nimport Icon from './icon'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n//STOP TIME 42:24 \n//STOP TIME =================\n\nconst Auth = () => {\nconst classes = useStyles(); \nconst [isSignup, setIsSignup ] = useState(false);\nconst [ showPassword, setShowPassword ] = useState(false);\nconst dispatch = useDispatch();\nconst history = useHistory();\n\n\nconst handleSubmit = () => {\n\n};\n\nconst handleChange = () => {\n\n};\n\nconst switchMode = () => {\n    setIsSignup((prevIsSignup) => !prevIsSignup); \n    handleShowPassword(false);\n\n};\n\nconst googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    //cannot get property profileObj is undefined if we didnt put ? . optional chain operator. . \n    const token = res?.tokenId; \n\n    try {\n        dispatch({ type: 'AUTH', data: {result, token }});\n\n        history.push('/');\n    }\n    catch (error) {\n        console.log(error);\n    }\n\n};\nconst googleFailure = (error) => {\n    console.log(error)\n    console.log('Google Sign In was unsuccessful. Try again later');\n\n};\n\nconst handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword )\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant=\"h5\">{isSignup ? 'Sign up' : 'Sign In'}</Typography>\n                <form className={ classes.form } onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {\n                            isSignup && (\n                                <>\n                                <Input name=\"firstName\" label=\"First name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last name\" handleChange={handleChange} half />\n                                 \n                                </>\n                            )\n                        }\n                        <Input name=\"email\" label=\"Email Address\" handleChange={ handleChange } type=\"email\" />\n                        <Input name=\"password\" label=\"password\" handleChange={handleChange } type={showPassword ? \"text\" : \"password\" } handleShowPassword={handleShowPassword} />\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n                    \n                    </Grid>\n                    <Button type=\"submit\" fullWidth vairant=\"contained\" color=\"primary\" className={classes.submit }> \n                    { isSignup ? 'Sign up' : 'Sign in' }\n                    </Button>\n   \n\n                    <GoogleLogin \n                    clientId=\"615087181653-je0qn9i6hpojq0ikaj6hd3d2qflft2ik.apps.googleusercontent.com\"\n                    render={(renderProps) => (\n                    <Button \n                        //Setting up button for google auth \n                    className={classes.googleButton} \n                    color='primary' \n                    fullWidth onClick={renderProps.onClick } \n                    disabled={renderProps.disabled} \n                    startIcon={<Icon />} variant=\"contianed\" > \n                    Google Sign In\n                    </Button>\n                    )}\n                    onSuccess={googleSuccess}\n                    onFailure={googleFailure}\n                    cookiePolicy=\"single_host_origin\"\n                    />\n                     <Grid container justify=\"flex-end\">\n                            <Grid item >\n                            <Button onClick={switchMode}>\n                                { isSignup ? 'Already have an acocount? Sign In' : \"Don't have an account? Sign up! \"}\n                            </Button>\n                            </Grid>\n                        </Grid>\n                </form>\n            </Paper>\n        </Container>\n        );\n};\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}