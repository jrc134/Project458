{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kierstyn\\\\Documents\\\\Classes\\\\Fall 2021\\\\CS 458 - Software Engineering\\\\Project458\\\\client\\\\src\\\\components\\\\Form\\\\DonationForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createDonation, updateDonation } from '../../actions/donations';\n\nconst DonationForm = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [donationData, setDonationData] = useState({\n    title: '',\n    message: '',\n    selectedFile: ''\n  });\n  const donation = useSelector(state => currentId ? state.donations.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (donation) setDonationData(donation);\n  }, [donation]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setDonationData({\n      title: '',\n      message: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createDonation({ ...donationData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updateDonation(currentId, { ...donationData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Please, Sign in to create a Donation\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, currentId ? `Editing \"${donation.title}\"` : 'Creating a Donation'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: donationData.title,\n    onChange: e => setDonationData({ ...donationData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Instructions\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: donationData.message,\n    onChange: e => setDonationData({ ...donationData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setDonationData({ ...donationData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 46\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Clear\")));\n};\n\nexport default DonationForm;","map":{"version":3,"sources":["C:/Users/Kierstyn/Documents/Classes/Fall 2021/CS 458 - Software Engineering/Project458/client/src/components/Form/DonationForm.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createDonation","updateDonation","DonationForm","currentId","setCurrentId","donationData","setDonationData","title","message","selectedFile","donation","state","donations","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","handleSubmit","e","preventDefault","name","result","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\nimport { createDonation, updateDonation } from '../../actions/donations';\r\n\r\nconst DonationForm = ({ currentId, setCurrentId }) => {\r\n    const [donationData, setDonationData] = useState({ title: '', message: '', selectedFile: '' });\r\n    const donation = useSelector((state) => (currentId ? state.donations.find((message) => message._id === currentId) : null));\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    useEffect(() => {\r\n      if (donation) setDonationData(donation);\r\n    }, [donation]);\r\n  \r\n    const clear = () => {\r\n      setCurrentId(0);\r\n      setDonationData({ title: '', message: '', selectedFile: '' });\r\n    };\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      if (currentId === 0) {\r\n        dispatch(createDonation({ ...donationData, name: user?.result?.name }));\r\n        clear();\r\n      } else {\r\n        dispatch(updateDonation(currentId, { ...donationData, name: user?.result?.name }));\r\n        clear();\r\n      }\r\n    };\r\n  \r\n    if(!user?.result?.name) {\r\n      return (\r\n        <Paper className={classes.paper} >\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            Please, Sign in to create a Donation\r\n          </Typography>\r\n        </Paper>\r\n      )\r\n    }\r\n  \r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n          <Typography variant=\"h6\">{currentId ? `Editing \"${donation.title}\"` : 'Creating a Donation'}</Typography>\r\n          <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={donationData.title} onChange={(e) => setDonationData({ ...donationData, title: e.target.value })} />\r\n          <TextField name=\"message\" variant=\"outlined\" label=\"Instructions\" fullWidth multiline rows={4} value={donationData.message} onChange={(e) => setDonationData({ ...donationData, message: e.target.value })} />\r\n          <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setDonationData({ ...donationData, selectedFile: base64 })} /></div>\r\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n        </form>\r\n      </Paper>\r\n    );\r\n  };\r\nexport default DonationForm;"]},"metadata":{},"sourceType":"module"}